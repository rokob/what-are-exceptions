== disasm: #<ISeq:<main>@./try.rb>======================================
0002 putspecialobject 1
0004 putobject        :main
0006 putiseq          main
0008 opt_send_without_block <callinfo!mid:core#define_method, argc:2, ARGS_SIMPLE>, <callcache>
0011 pop              
0014 putspecialobject 1
0016 putobject        :other
0018 putiseq          other
0020 opt_send_without_block <callinfo!mid:core#define_method, argc:2, ARGS_SIMPLE>, <callcache>
0023 pop              
0026 putself          
0027 opt_send_without_block <callinfo!mid:main, argc:0, FCALL|VCALL|ARGS_SIMPLE>, <callcache>
0030 leave            
== disasm: #<ISeq:main@./try.rb>========================================
== catch table
| catch type: rescue st: 0004 ed: 0010 sp: 0000 cont: 0011
== disasm: #<ISeq:rescue in main@./try.rb>==============================
local table (size: 1, argc: 0 [opts: 0, rest: -1, post: 0, block: -1, kw: -1@-1, kwrest: -1])
[ 1] "\#$!"     
0002 getlocal_OP__WC__0 3
0004 getinlinecache   11, <is:0>
0007 getconstant      :Exception
0009 setinlinecache   <is:0>
0011 checkmatch       3
0013 branchunless     21
0015 getlocal_OP__WC__0 3                                             (   5)
0017 setlocal_OP__WC__1 3                                             (   4)
0019 putnil           
0020 leave            
0021 getlocal_OP__WC__0 3
0023 throw            0
| catch type: retry  st: 0010 ed: 0011 sp: 0000 cont: 0004
|------------------------------------------------------------------------
local table (size: 1, argc: 0 [opts: 0, rest: -1, post: 0, block: -1, kw: -1@-1, kwrest: -1])
[ 1] e          
0006 putself          
0007 opt_send_without_block <callinfo!mid:other, argc:0, FCALL|VCALL|ARGS_SIMPLE>, <callcache>
0010 nop                                                              (   2)
0013 leave                                                            (   3)
== disasm: #<ISeq:other@./try.rb>=======================================
0002 putnil           
0005 leave            
