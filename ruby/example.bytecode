== disasm: #<ISeq:<main>@example.rb>====================================
0000 trace            1                                               (   1)
0002 putspecialobject 3
0004 putnil           
0005 defineclass      :Thing, <class:Thing>, 0
0009 pop              
0010 trace            1                                               (  20)
0012 putself          
0013 getinlinecache   20, <is:0>
0016 getconstant      :Thing
0018 setinlinecache   <is:0>
0020 opt_send_without_block <callinfo!mid:new, argc:0, ARGS_SIMPLE>, <callcache>
0023 opt_send_without_block <callinfo!mid:process, argc:0, ARGS_SIMPLE>, <callcache>
0026 opt_send_without_block <callinfo!mid:puts, argc:1, FCALL|ARGS_SIMPLE>, <callcache>
0029 leave            
== disasm: #<ISeq:<class:Thing>@example.rb>=============================
0000 trace            2                                               (   1)
0002 trace            1                                               (   2)
0004 putspecialobject 1
0006 putobject        :obtain_data
0008 putiseq          obtain_data
0010 opt_send_without_block <callinfo!mid:core#define_method, argc:2, ARGS_SIMPLE>, <callcache>
0013 pop              
0014 trace            1                                               (   6)
0016 putspecialobject 1
0018 putobject        :process
0020 putiseq          process
0022 opt_send_without_block <callinfo!mid:core#define_method, argc:2, ARGS_SIMPLE>, <callcache>
0025 trace            4                                               (  18)
0027 leave                                                            (   6)
== disasm: #<ISeq:obtain_data@example.rb>===============================
0000 trace            8                                               (   2)
0002 trace            1                                               (   3)
0004 putself          
0005 getinlinecache   12, <is:0>
0008 getconstant      :StandardError
0010 setinlinecache   <is:0>
0012 putstring        "hello"
0014 opt_send_without_block <callinfo!mid:new, argc:1, ARGS_SIMPLE>, <callcache>
0017 opt_send_without_block <callinfo!mid:raise, argc:1, FCALL|ARGS_SIMPLE>, <callcache>
0020 trace            16                                              (   4)
0022 leave                                                            (   3)
== disasm: #<ISeq:process@example.rb>===================================
== catch table
| catch type: rescue st: 0004 ed: 0010 sp: 0000 cont: 0011
== disasm: #<ISeq:rescue in process@example.rb>=========================
local table (size: 2, argc: 0 [opts: 0, rest: -1, post: 0, block: -1, kw: -1@-1, kwrest: -1])
[ 2] "\#$!"     
0000 getlocal_OP__WC__0 2                                             (   9)
0002 putobject        StandardError
0004 checkmatch       3
0006 branchunless     14
0008 getlocal_OP__WC__0 2                                             (  10)
0010 setlocal_OP__WC__1 2                                             (   9)
0012 putnil           
0013 leave                                                            (   9)
0014 getlocal_OP__WC__0 2
0016 throw            0
| catch type: retry  st: 0010 ed: 0011 sp: 0000 cont: 0004
|------------------------------------------------------------------------
local table (size: 2, argc: 0 [opts: 0, rest: -1, post: 0, block: -1, kw: -1@-1, kwrest: -1])
[ 2] e          
0000 trace            8                                               (   6)
0002 trace            1                                               (   7)
0004 trace            1                                               (   8)
0006 putself          
0007 opt_send_without_block <callinfo!mid:obtain_data, argc:0, FCALL|VCALL|ARGS_SIMPLE>, <callcache>
0010 nop                                                              (   7)
0011 pop              
0012 trace            1                                               (  12)
0014 getlocal_OP__WC__0 2
0016 branchunless     24
0018 trace            1                                               (  13)
0020 putstring        "broken"
0022 jump             28                                              (  12)
0024 trace            1                                               (  15)
0026 putstring        "works"
0028 trace            16                                              (  17)
0030 leave                                                            (  15)
