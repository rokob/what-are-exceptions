define i32 @main() #0 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %1 = alloca i32, align 4
  %2 = alloca i8*
  %3 = alloca i32
  %4 = alloca %"class.std::exception"*, align 8
  store i32 0, i32* %1, align 4
  invoke void @_Z5otherv()
          to label %5 unwind label %6

; <label>:5:                                      ; preds = %0
  br label %18

; <label>:6:                                      ; preds = %0
  %7 = landingpad { i8*, i32 }
          catch i8* bitcast (i8** @_ZTISt9exception to i8*)
  %8 = extractvalue { i8*, i32 } %7, 0
  store i8* %8, i8** %2, align 8
  %9 = extractvalue { i8*, i32 } %7, 1
  store i32 %9, i32* %3, align 4
  br label %10

; <label>:10:                                     ; preds = %6
  %11 = load i32, i32* %3, align 4
  %12 = call i32 @llvm.eh.typeid.for(i8* bitcast (i8** @_ZTISt9exception to i8*)) #3
  %13 = icmp eq i32 %11, %12
  br i1 %13, label %14, label %19

; <label>:14:                                     ; preds = %10
  %15 = load i8*, i8** %2, align 8
  %16 = call i8* @__cxa_begin_catch(i8* %15) #3
  %17 = bitcast i8* %16 to %"class.std::exception"*
  store %"class.std::exception"* %17, %"class.std::exception"** %4, align 8
  call void @__cxa_end_catch()
  br label %18

; <label>:18:                                     ; preds = %14, %5
  ret i32 0

; <label>:19:                                     ; preds = %10
  %20 = load i8*, i8** %2, align 8
  %21 = load i32, i32* %3, align 4
  %22 = insertvalue { i8*, i32 } undef, i8* %20, 0
  %23 = insertvalue { i8*, i32 } %22, i32 %21, 1
  resume { i8*, i32 } %23
}

define void @_Z5otherv() #1 {
  ret void
}
